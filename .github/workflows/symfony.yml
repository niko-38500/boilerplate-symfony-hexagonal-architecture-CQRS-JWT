name: Symfony

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  php-stan:
    name: Run static analyse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker images.
        id: docker-cache
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('**/docker-compose.yml') }}

      - name: Start docker containers
        run: composer up

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs

      - name: PHPStan
        run: composer stan

  php-cs-fixer:
    name: Check CS fixer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --config=.php-cs-fixer.dist.php --diff --dry-run

  tests:
    name: Run test suits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker images.
        id: docker-cache
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('**/docker-compose.yml') }}

      - name: Start docker containers
        run: composer up

      #- name: test
      #  run: |
      #    whoami
      #    pwd
      #    echo aa

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: docker exec php composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs

      - name: Create cache dir
        run: docker exec php mkdir -p /srv/www/cycleflow/var/cache/test

      - name: Generate JWT key pair for test env
        run: composer jwt-gen-test

      - name: Create test Database
        run: composer test-db

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: composer tests
