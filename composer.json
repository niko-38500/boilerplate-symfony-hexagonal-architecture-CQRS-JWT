{
    "type": "project",
    "license": "proprietary",
    "minimum-stability": "stable",
    "prefer-stable": true,
    "require": {
        "php": ">=8.3",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "doctrine/doctrine-bundle": "^2.11",
        "doctrine/doctrine-migrations-bundle": "^3.3",
        "doctrine/orm": "^2.17",
        "knpuniversity/oauth2-client-bundle": "^2.18",
        "league/oauth2-github": "^3.1",
        "lexik/jwt-authentication-bundle": "^2.2",
        "nesbot/carbon": "3.x-dev",
        "phpdocumentor/reflection-docblock": "^5.3",
        "phpstan/phpdoc-parser": "^1.24",
        "ramsey/uuid": "^4.7",
        "symfony/asset": "7.0.*",
        "symfony/browser-kit": "7.0.*",
        "symfony/console": "7.0.*",
        "symfony/doctrine-messenger": "7.0.*",
        "symfony/dotenv": "7.0.*",
        "symfony/flex": "^2",
        "symfony/framework-bundle": "7.0.*",
        "symfony/http-client": "7.0.*",
        "symfony/mailer": "7.0.*",
        "symfony/messenger": "7.0.*",
        "symfony/notifier": "7.0.*",
        "symfony/property-access": "7.0.*",
        "symfony/property-info": "7.0.*",
        "symfony/runtime": "7.0.*",
        "symfony/security-bundle": "7.0.*",
        "symfony/serializer": "7.0.*",
        "symfony/translation": "7.0.*",
        "symfony/twig-bundle": "7.0.*",
        "symfony/validator": "7.0.*",
        "symfony/yaml": "7.0.*",
        "twig/cssinliner-extra": "^3.7",
        "twig/extra-bundle": "^2.12|^3.0",
        "twig/twig": "^2.12|^3.0"
    },
    "require-dev": {
        "dama/doctrine-test-bundle": "^8.0",
        "doctrine/data-fixtures": "^1.6",
        "doctrine/doctrine-fixtures-bundle": "^3.5",
        "nelmio/api-doc-bundle": "^4.18",
        "phpstan/phpstan": "^1.10",
        "phpunit/phpunit": "^9.5",
        "symfony/css-selector": "7.0.*",
        "symfony/debug-bundle": "7.0.*",
        "symfony/maker-bundle": "^1.50",
        "symfony/phpunit-bridge": "^7.0",
        "symfony/stopwatch": "7.0.*",
        "symfony/var-dumper": "7.0.*",
        "symfony/web-profiler-bundle": "7.0.*"
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": true,
            "symfony/flex": true,
            "symfony/runtime": true
        },
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*",
        "symfony/polyfill-php81": "*",
        "symfony/polyfill-php82": "*"
    },
    "scripts": {
        "qa": "composer cs && composer stan",
        "stan": "docker exec php vendor/bin/phpstan analyse src tests --memory-limit 10G",
        "cs": "docker exec php tools/php-cs-fixer/vendor/bin/php-cs-fixer fix",
        "up": "docker-compose up -d",
        "stop": "docker-compose stop",
        "docker": "docker exec -it php sh",
        "jwt-gen": "docker exec php php bin/console lexik:jwt:generate-keypair",
        "jwt-gen-test": "docker exec php php bin/console lexik:jwt:generate-keypair -e test",
        "rebuild-image": "docker-compose build",
        "reset-db": "docker exec php sh -c \"php bin/console doctrine:database:drop --if-exists --force --env=dev && php bin/console doctrine:database:create --env=dev && php bin/console doctrine:migration:migrate -n --env=dev && php bin/console doctrine:fixtures:load -n --env=dev\"",
        "test-db": "docker exec php sh -c \"php bin/console doctrine:database:drop --if-exists --force --env=test && php bin/console doctrine:database:create --env=test && php bin/console doctrine:migration:migrate -n --env=test && php bin/console doctrine:fixtures:load -n --env=test\"",
        "tests": "docker exec php ./bin/phpunit --colors tests",
        "test-coverage": "docker exec php php vendor/phpunit/phpunit/phpunit --coverage-clover /opt/phpstorm-coverage/climberton_api@tests.xml --bootstrap tests/bootstrap.php --configuration phpunit.xml.dist tests --teamcity",
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ]
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "7.0.*"
        }
    }
}
